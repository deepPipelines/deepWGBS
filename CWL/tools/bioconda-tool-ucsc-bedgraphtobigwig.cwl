#!/usr/bin/env cwl-runner

class: CommandLineTool

id: "bioconda_ucsc-bedgraphtobigwig"
label: "bioconda UCSC bedgraphtobigwig"

cwlVersion: "v1.0"

dct:creator:
  "@id": "https://orcid.org/0000-0001-6231-4417"
  foaf:name: Karl Nordstr√∂m
  foaf:mbox: "mailto:karl.nordstroem@uni-saarland.de"


requirements:
  - class: DockerRequirement
    dockerPull: "quay.io/biocontainers/ucsc-bedgraphtobigwig:357--1"

hints:
  - class: ResourceRequirement
    coresMin: 1
    ramMin: 4092
    outdirMin: 512000

baseCommand: [ "bedGraphToBigWig" ]

outputs:

  bigwigFile:
    type: File
    outputBinding:
      glob: $( inputs.bigwigName )

inputs:

  sortedBedGraphFile:
    type: File
    inputBinding:
      position: 10
    doc: |
      in.bedGraph is a four column file in the format:
            <chrom> <start> <end> <value>

  chromSizeFile:
    type: File
    inputBinding:
      position: 15
    doc: |
      chrom.sizes is a two-column file/URL: <chromosome name> <size in bases>

  bigwigName:
    type: string
    inputBinding:
      position: 20
    doc: |
      out.bw is the output indexed big wig file

  blockSize:
    type: int?
    inputBinding:
      position: 5
      prefix: "-blockSize="
      separate: false
    doc: |
      Number of items to bundle in r-tree.  Default 256

  itemsPerSlot:
    type: int?
    inputBinding:
      position: 5
      prefix: "-itemsPerSlot="
      separate: false
    doc: |
      Number of data points bundled at lowest level. Default 1024

  unc:
    type: boolean?
    inputBinding:
      position: 5
      prefix: "-unc"
    doc: |
      If set, do not use compression.


doc: |
    bedGraphToBigWig v 4 - Convert a bedGraph file to bigWig format.
    usage:
       bedGraphToBigWig in.bedGraph chrom.sizes out.bw
    where in.bedGraph is a four column file in the format:
          <chrom> <start> <end> <value>
    and chrom.sizes is a two-column file/URL: <chromosome name> <size in bases>
    and out.bw is the output indexed big wig file.
    If the assembly <db> is hosted by UCSC, chrom.sizes can be a URL like
      http://hgdownload.cse.ucsc.edu/goldenPath/<db>/bigZips/<db>.chrom.sizes
    or you may use the script fetchChromSizes to download the chrom.sizes file.
    If not hosted by UCSC, a chrom.sizes file can be generated by running
    twoBitInfo on the assembly .2bit file.
    The input bedGraph file must be sorted, use the unix sort command:
      sort -k1,1 -k2,2n unsorted.bedGraph > sorted.bedGraph
    options:
       -blockSize=N - Number of items to bundle in r-tree.  Default 256
       -itemsPerSlot=N - Number of data points bundled at lowest level. Default 1024
       -unc - If set, do not use compression.
